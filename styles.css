/*
Base styling of box-sizing and variable set up.

Body colors and gutter sizing.

Header Styling.

Footer styling.
 */
:root {

	font-size: calc(0.5em + 1vw);
	--main-font: 'Open Sans', sans-serif;
	--main-width: 70%;
	--gutter-size: 1.5em;
	box-sizing: border-box;
}

*,
::before,
::after {
	box-sizing: inherit;
}

body * + * {
	margin-top: var(--gutter-size);
}

body {
	background-color: #9E9E89;
	font-family: var(--main-font);
}



header {
	color: #fff;
	background-color: grey;
	border-radius: .5em;
	padding: .3em;
	margin: 0 var(--gutter-size);
}

footer {
	color: #666;
	background-color: #ccc;
	padding: 15px 0;
	font-size: 14px;
}



.aside {
	background-color: #E8E8D7;
	border-radius: 4px;
	padding: .5em;
}
/* credit for scrollbar knowledge to: 
Sara Cope

https://css-tricks.com/almanac/properties/s/scrollbar/
*/
@media (max-width: 425px) {
	.aside {
	}
}
aside::-webkit-scrollbar {
    width: .5em;
}
 
aside::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
}
 
aside::-webkit-scrollbar-thumb {
  background-color: darkgrey;
  outline: 1px solid slategrey;
}

/* grid */

.row {
	margin-left: calc(var(--gutter-size)/2);
	margin-right: calc(var(--gutter-size)/2);
}

/*A clearfix for the row so we don't have to add a clearfix class every time we add a row'*/
/*The row is slimply a clearfix container for the columns*/
.row::after {
	content: " ";
	display: block;
	clear: both;
}

/*Float all of the columns to the left with an attribute selector that targets elements based on their class attributes. '*=' incluedes any values that have the 'column-' string*/
/*Setting the left and right padding to 0.75em makes for gutters of 1.5em*/
/*Setting margin-top to 0 overrides the lobotomized owl*/
[class*="column-"] {
	float: left;
	margin-top: 0;
	padding: 0 .2em;
}

.column-1 { width: 8.3333%; }
.column-2 { width: 16.6667%; }
.column-3 { width: 25%; }
.column-4 { width: 33.3333%; }
.column-5 { width: 41.6667%; }
.column-6 { width: 50%; }
.column-7 { width: 58.3333%; }
.column-8 { width: 66.6667%; }
.column-9 { width: 75%; }
.column-10 { width: 83.3333%; }
.column-11 { width: 91.6667%; }
.column-12 { width: 100%; }




@supports (display: flex) {
	.row {
		display: flex;
		justify-content: flex-start;
	}

	[class*="column-"] {
		display: flex;
	}
	.column-3 {
		flex-basis: 25%;
	}
	.column-6 {
		flex-basis: 50%;
	}
	.column-4 {
		flex-basis: 33.3333%;
	}
	.column-8 {
		flex-basis: 66.6667%;
	}
	

	[class*="column-"] > * {
		flex-grow: 1;
	}
}


@media (max-width: 425px) {
	[class*="column-"] {
		width: 100%;
	}

	@supports (display: flex) {

		.container {
			flex-direction: column;
		}

		[class*="column-"] {
			min-height: 4em;
		}

		.container > *:not(:last-child) {
			margin-bottom: var(--gutter-size);
		}
	}
}

/*
Buttons

Various button sizes and colors

Markup:
<button class="button {{modifier_class}}">
	click here
</button>

.button--smallSquare - A small square button
.button--largeSquare - A large square button

Styleguide Buttons
*/

.button {
	text-align: center;
	margin-bottom: .3em;
	padding: 0 0.5em;
	color: #fff;
	text-align: center;
	text-decoration: none;
	text-transform: uppercase;
	border: 0;
	border-radius: .8rem;
	background-image: radial-gradient(at 33% 25%, grey, #57574B);
	box-shadow: .05em .05em 0em #57574B;
	font-size: 1rem;
}

.button:active {
	box-shadow: inset 0 0 0.2em #57574B, inset 0 0.2em .5em rgba(0,0,0,0.3);
	transform: translateY(0.05em);
	background-image: radial-gradient(at 50% 50%, grey, #57574B);
}


.button--red {
	background-image: radial-gradient(at 33% 25%, grey, #BE3133);
}

.button--red:active {
	background-image: radial-gradient(at 50% 50%, grey, #BE3133);
}

@supports (display: flex) {
	.buttonContainer {
		flex-grow: 0;
	}
}


/*
Link

A link to match its parent element

Markup:
<div>
	<a class="link link--subtle">
</div>

.link--subtle

Styleguide Link
*/

.link {
	text-decoration: underline;
}

.link--subtle {
	color: inherit;
}

/*
Text center

Center text within a block by applying `text-center`

Markup:
<p class="text-center">Centered text</p>

Weight: 1

Styleguide Utilities.text-center
*/
.text-center {
	text-align: center !important;
}


/*
Float left

Float an element to the left with `float-left`

Weight: 3

Styleguide Utilities.float-left
*/
.float-left {
	float: left;
}

/*
Clearifx

Add the class `clearfix` to an element to force it to contain its floated contents

Markup:
<div class="clearfix">
	<span class="float-left">floated</span>
</div>

Weight: 2

Styleguide Utilities.clearfix
*/
.clearfix::before,
.clearfix::after {
	content: " ";
	display: table;
}

.clearfix::after {
	clear: both;
}


/* End of modules section */

/*Calculator Styling */
.main {
	background-color: #E8E8D7;
	background-image: radial-gradient(#E8E8D7 85%, #cacabe);
	border-radius: .5em;
	max-width: 70%;
	margin: auto;
	padding-bottom: 1em;
	font-family: 'IBM Plex Mono', monospace;
	box-shadow: 0.1em 0.1em 0.5em 4px #82827a,
		inset -.5px -.5px 0.5em #124,
		inset -0.4em -0.4em 1em rgba(0,0,0,0.4);
	}

.main > input {
	font-size:1.5rem;
	line-height: 3rem;
	width: 95%;
	margin: 0 5px 0 5px;
	background-color: #EFEFD6;
	border: 1px solid rgba(134, 134, 128, .7);
	border-radius: .5em; 
	text-align: right;
	font-family: inherit;

}

.button {
}

.button > p {
	margin: 0;
	font-family: 'IBM Plex Mono', monospace;
}

.button:not(:last-child) {
}

.row {
	flex-wrap: wrap;
}

.equalsContainer {
	position: relative;
}

@media (min-width: 426px) and  (max-width: 768px) {
	.main {
		max-width: 209px
	}
	.button--smallSquare {
		max-width: 42px;
	}
	.main > input {
		font-size: 1rem;
	}
}
@media (min-width: 769px) {
	.main {
		max-width: 335px
	}
	.button--smallSquare {
		max-width: 66px;
		max-height: 38px;
	}
	.button {
		padding: 0.2em .3em;
	}
}
@media (min-width: 1440px) {
	.button > p {
		font-size: .8em;
	}
}

.equals {
	position: absolute;
	height: calc(200% - .2em);
	width: calc(100% - .5em);
}

input:focus {
	outline: 0px;
}

.aside {
	overflow: auto;
}

#ac {
	position: relative;
	right: 4em;
	bottom: 1em;
	max-width: 2.4em;
	max-height: 1.6em;
}
@media (max-width: 425px) {
	.aside {
		height: 100px;
	}
}
@media (min-width: 426px) and (max-width: 768px) {
	.aside {
		max-height: 248px;
	}
}

@media (min-width: 769px) {
	.aside {
		max-height: 351px;
	}
}
